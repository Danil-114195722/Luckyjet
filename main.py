import asyncio

from aiogram import Bot, types
from aiogram.utils import executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import Dispatcher, FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import CallbackQuery

from data.config import TOKEN
from utils.keyboard import inline_choose_rate, inline_join_group, main_keyboard, inline_buy_rate
from utils.db_connection import create_table_user, \
    select_user, add_user, \
    make_reg, make_rate


bot = Bot(token=TOKEN)
storage = MemoryStorage()
disp = Dispatcher(bot=bot, storage=storage)


# –∫–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
class RegState(StatesGroup):
    user_id = State()
    chosen_rate = State()
    start_reg = State()


'''
$$$$$$$$$$$$$$$
–ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò
$$$$$$$$$$$$$$$
'''


async def check_reg_func(user_id: int):
    reg_status = select_user(tg_id=user_id)[2]
    print(reg_status)
    if reg_status:
        return True

    # –∑–¥–µ—Å—å –ù–∏–∫–∏—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    nikita_check_reg_link = False
    # –µ—Å–ª–∏ —é–∑–µ—Ä –ø–µ—Ä–µ—Ö–æ–¥–∏–ª –ø–æ —Å—Å—ã–ª–∫–µ, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ—É –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –ë–î
    if nikita_check_reg_link:
        make_reg(tg_id=user_id)
        return True

    return False


async def check_deposit_func(user_id: int):
    rate = select_user(tg_id=user_id)[3]

    if rate is not None:
        return True

    # –∑–¥–µ—Å—å –ù–∏–∫–∏—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ –æ–ø–ª–∞—Ç—É –¥–µ–ø–æ–∑–∏—Ç–∞
    nikita_check_reg_link = False
    # –µ—Å–ª–∏ —é–∑–µ—Ä –ø–µ—Ä–µ—Ö–æ–¥–∏–ª –ø–æ —Å—Å—ã–ª–∫–µ, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ—É –æ–± –æ–ø–ª–∞—Ç–µ –≤ –ë–î
    if nikita_check_reg_link:
        nikita_rate_status = 0
        make_rate(tg_id=user_id, rate=nikita_rate_status)
        return True

    return False


# —Ñ—É–Ω–∫—Ü–∏—è, –≤—ã–ø–æ–ª–Ω—è–µ–º–∞—è –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –±–æ—Ç–∞
async def on_startup(disp):
    # —Å–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É "user"
    create_table_user()


# –≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞
@disp.message_handler(commands='start', state='*')
async def start_command(message: types.Message, state: FSMContext):
    await state.finish()

    user_id = message.from_user.id

    await RegState.user_id.set()
    await state.update_data(user_id=user_id)

    # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞ –≤ –ë–î
    if not select_user(tg_id=user_id):
        add_user(tg_id=user_id, reg=False)

    photo = types.InputFile("./img/select_rate.jpeg")
    await bot.send_photo(chat_id=user_id, photo=photo, caption='–í—ã–±–µ—Ä–∏ —Ç–∞—Ä–∏—Ñ:', reply_markup=inline_choose_rate)

    await RegState.chosen_rate.set()
    # await start(callback=message, state=state)


'''
$$$$$$$$$$$$$$$$$$$
–§–£–ù–ö–¶–ò–ò –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò
$$$$$$$$$$$$$$$$$$$
'''


# –Ω–∞—á–∞—Ç—å
@disp.callback_query_handler(state=RegState.chosen_rate, text=['always', 'month', 'free'])
# @disp.callback_query_handler(state=RegState.chosen_rate)
async def start(callback: CallbackQuery, state: FSMContext):
    state_data = await state.get_data()

    photo = types.InputFile("./img/start_reg.jpeg")
    await bot.send_photo(
        chat_id=state_data["user_id"],
        photo=photo,
        caption='''–ü—Ä–∏–≤–µ—Ç!
–ö–∞–∫ —è –ø–æ–Ω–∏–º–∞—é —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –≤ –º–æ–π –ó–ê–ö–†–´–¢–´–ô –í–ò–ü –ö–ê–ù–ê–õ —Å —Å–∏–≥–Ω–∞–ª–∞–º–∏ –¥–ª—è –∏–≥—Ä—ã –≤ LuckyJet?
–≠—Ç–æ –ë–ï–°–ü–õ–ê–¢–ù–û
–ó–∞ 1 –Ω–µ–¥–µ–ª—é —Ç—ã —É—Å–ø–µ–µ—à—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –º–µ—Å—è—á–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –º–æ–µ–º—É –í–ò–ü –ö–ê–ù–ê–õ–£
–ù—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ä—è–¥ –ø—Ä–æ—Å—Ç—ã—Ö —É—Å–ª–æ–≤–∏–π –∏ –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å!
–ï—Å–ª–∏ —Ç—ã –≥–æ—Ç–æ–≤ - –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –ù–ê–ß–ê–¢–¨ –Ω–∏–∂–µ''',
        reply_markup=inline_join_group
    )

    await RegState.start_reg.set()


# —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
@disp.callback_query_handler(state=RegState.start_reg, text='start')
async def start_reg(callback: CallbackQuery, state: FSMContext, fail_reg: bool = False):
    state_data = await state.get_data()

    if not fail_reg:
        photo = types.InputFile("./img/reg_new_acc.jpeg")
        await bot.send_photo(
            chat_id=state_data["user_id"],
            photo=photo,
            caption='''üì≤–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ 1win (–ø—Ä–æ–≤–∞–π–¥–µ—Ä –∏–≥—Ä—ã LuckyJet). –ß—Ç–æ–±—ã –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –Ω—É–∂–Ω–æ —Å–æ–±–ª—é—Å—Ç–∏ –≤–∞–∂–Ω—ã–µ —É—Å–ª–æ–≤–∏—è:
\n1Ô∏è‚É£–ê–∫–∫–∞—É–Ω—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ù–û–í–´–ú! –ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø¬ª –≤—ã –ø–æ–ø–∞–¥–∞–µ—Ç–µ –Ω–∞ —Å—Ç–∞—Ä—ã–π, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–π—Ç–∏ —Å –Ω–µ–≥–æ –∏ –∑–∞–Ω–æ–≤–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø¬ª, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø–æ –Ω–æ–≤–æ–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!
\n2Ô∏è‚É£–ß—Ç–æ–±—ã –±–æ—Ç —Å–º–æ–≥ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥ CRYPA –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!''',
            reply_markup=main_keyboard
        )

    else:
        photo = types.InputFile("./img/reg_reject.jpeg")
        await bot.send_photo(
            chat_id=state_data["user_id"],
            photo=photo,
            caption='''‚ùå–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ù–ï –ü–†–û–ô–î–ï–ù–ê\n\nüì≤–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ 1win (–ø—Ä–æ–≤–∞–π–¥–µ—Ä –∏–≥—Ä—ã LuckyJet). –ß—Ç–æ–±—ã –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –Ω—É–∂–Ω–æ —Å–æ–±–ª—é—Å—Ç–∏ –≤–∞–∂–Ω—ã–µ —É—Å–ª–æ–≤–∏—è:
\n1Ô∏è‚É£–ê–∫–∫–∞—É–Ω—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ù–û–í–´–ú! –ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø¬ª –≤—ã –ø–æ–ø–∞–¥–∞–µ—Ç–µ –Ω–∞ —Å—Ç–∞—Ä—ã–π, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–π—Ç–∏ —Å –Ω–µ–≥–æ –∏ –∑–∞–Ω–æ–≤–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø¬ª, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø–æ –Ω–æ–≤–æ–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!
\n2Ô∏è‚É£–ß—Ç–æ–±—ã –±–æ—Ç —Å–º–æ–≥ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥ CRYPA –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!
‚ö†Ô∏è–ö–∞–∫ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∑–¥–µ—Å—å: https://t.me/c/1800027834/307
\n–ü–æ—Å–ª–µ –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–µ–¥—ë—Ç –≤–∞—Å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É‚úÖ''',
            reply_markup=main_keyboard
        )


# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
@disp.callback_query_handler(state=RegState.start_reg, text='check_reg')
async def check_reg(callback: CallbackQuery, state: FSMContext):
    state_data = await state.get_data()

    reg = await check_reg_func(user_id=state_data["user_id"])

    if reg:
        await deposit(callback=callback, state=state)
    else:
        await start_reg(callback=callback, state=state, fail_reg=True)


# –æ–ø–ª–∞—Ç–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
async def deposit(callback: CallbackQuery, state: FSMContext):
    state_data = await state.get_data()

    photo = types.InputFile("./img/reg_done.jpeg")
    await bot.send_photo(
        chat_id=state_data["user_id"],
        photo=photo,
        caption='''‚úÖ–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê!\n\n‚ÄºÔ∏è–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—É—é –≥—Ä—É–ø–ø—É —Å —Å–∏–≥–Ω–∞–ª–∞–º–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞ –ª—é–±—É—é —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏.
–ù–∞ —ç—Ç–∏ –¥–µ–Ω—å–≥–∏ –≤—ã –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫–∏ –ø–æ —Å–∏–≥–Ω–∞–ª–∞–º.
–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ü–û–ü–û–õ–ù–ò–¢–¨ –î–ï–ü–û–ó–ò–¢ –∏ —Ç–µ–±–µ –æ—Ç–∫—Ä–æ–µ—Ç 1WIN.
\n‚úÖ–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–æ—Ç –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –≤—ã–¥–∞—Å—Ç –≤–∞–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É''',
        reply_markup=inline_buy_rate
    )


# –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã –¥–µ–ø–æ–∑–∏—Ç–∞
@disp.callback_query_handler(state=RegState.start_reg, text='check_paid')
async def check_paid(callback: CallbackQuery, state: FSMContext):
    state_data = await state.get_data()

    rate_paid = await check_deposit_func(user_id=state_data["user_id"])

    if rate_paid:
        await bot.send_message(
            chat_id=state_data["user_id"],
            text='''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –í–ò–ü-—á–∞—Ç! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤—Ö–æ–¥ - https://t.me/+IwQ9bT41nzBiN2Yy
–ï—Å–ª–∏ –±—É–¥—É—Ç –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, —Ç–æ –ø–∏—à–∏ –º–Ω–µ @strategvlad''',
            reply_markup=main_keyboard
        )
    else:
        await deposit(callback=callback, state=state)


if __name__ == '__main__':
    executor.start_polling(disp, skip_updates=True, on_startup=on_startup)
